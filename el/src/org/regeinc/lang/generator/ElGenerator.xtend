/*
 * generated by Xtext
 */
package org.regeinc.lang.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IGenerator
import org.eclipse.xtext.generator.IFileSystemAccess
import org.regeinc.lang.el.Element
import org.regeinc.lang.el.Model

class ElGenerator implements IGenerator {
		
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		var model = resource.allContents.toIterable.filter(typeof(Model)).head
		for(element: model.allElement) {
			var fileName = element.pkg.name.replace('.','/')+"/"+getPublicTypeName(element)+ ".java";
    		fsa.generateFile(fileName,compile(element))
  		}
	}
	
	def compile(Element element)'''
		«IF element.pkg!=null»package «element.pkg.name»;«ENDIF»
		«IF !element.allImport.nullOrEmpty»«FOR importStatement: element.allImport»
		
		import «importStatement.importedNamespace»;«ENDFOR»«ENDIF»
		«IF !element.allType.nullOrEmpty»«FOR type: element.allType»
		
		«TypeJ::instance.compile(type)»«ENDFOR»«ENDIF»'''
	
	def String getPublicTypeName(Element element){
		for(type: element.allType){
			//if(type.visibility!=null && type.visibility.toString.equals("public")){
				//return type.name
			//}
		}
		// none declared public, return the first one
		element.allType.head.name
	}
}
